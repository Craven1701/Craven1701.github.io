I"f<h1 id="a文件系统的简单操作">A.文件系统的简单操作</h1>
<h3 id="1df--列出文件系统整体的磁盘使用量--du-评估文件系统的磁盘使用量">1.<code class="language-plaintext highlighter-rouge">df</code>  列出文件系统整体的磁盘使用量 &amp; <code class="language-plaintext highlighter-rouge">du</code> 评估文件系统的磁盘使用量</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">df</span> <span class="o">[</span>OPTIONS] <span class="o">[</span>目录或文件名]
<span class="c">#无参数形势下列出系统内所有文件系统</span>
<span class="nt">-h</span> <span class="c">#以人类易读的格式显示 </span>
<span class="nt">-i</span> <span class="c">#不使用硬盘容量 以inode的数目来显示</span>

<span class="nb">du</span> <span class="o">[</span>OPTIONS] <span class="o">[</span>文件名或者目录名称]
<span class="c">#会切实的进入文件系统内部去查找数据 速度较慢</span>
<span class="c">#每一个文件的大小都会出来 </span>
</code></pre></div></div>

<h3 id="2ln">2.<code class="language-plaintext highlighter-rouge">ln</code></h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">ln</span> <span class="o">[</span>OPTIONS] TARGET LINK_NAME
<span class="nt">-s</span> <span class="c"># 不加任何参数进行link 就是硬链接 -s是符号链接 </span>
<span class="nt">-f</span> <span class="c"># 如果目标文件存在时，就主动将目标文件直接删除后再创建</span>
</code></pre></div></div>

<h4 id="hard-link-硬链接">Hard link 硬链接</h4>

<p>实现多个文件对应同一个inode号码，即由硬链接关联的文件，虽然路径不同，但是inode相同，对应的内部data block也是一样的。</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">*</span><span class="p">(</span><span class="n">hard_link</span><span class="p">)</span><span class="o">=</span><span class="n">inode</span><span class="p">;</span>
 <span class="c1">// Hard_link给人的感觉像是一个inode的指针</span>
 <span class="c1">// 用*析出内容之后是一个inode</span>
</code></pre></div></div>

<p><strong>hard link 只是在某个目录下新建一条文件名连接到某inode号码的关联记录而已</strong></p>

<p>如下图所示，hardlink会使得两个文件名所有相关的信息都会一模一样(除了文件名之外)，本质上是同一个文件，<code class="language-plaintext highlighter-rouge">连接数</code> 字段为<code class="language-plaintext highlighter-rouge">2</code>，显示了有多少个文件连接到该inode</p>

<p><img src="/Users/ncc-1701-enterprise/Desktop/Screen Shot 2021-01-31 at 11.13.13.png" alt="" /></p>

<p><strong>Tips</strong></p>

<p>a).Hard link只能在单一的文件系统上进行，不可以跨文件系统设立。</p>

<p>b).不可以对目录使用Hard link</p>

<h4 id="symbolic-link-符号链接">Symbolic link 符号链接</h4>

<p>符号链接会创建新的文件，使用新的inode和block，而这个block的内容会指向源文件的文件名(路径)，再经由这文件名(路径)去访问真实的文件数据。感觉相当于是一个文件指针。</p>

<pre><code class="language-C">*(Symbolic_link)=file;
*(file)=inode;
//大概是这种感觉？
</code></pre>

<p>如果在创建Symbolic link之后再删除Source 那么Symbolic link就会打不开</p>

<p><strong>Tips：</strong>新的目录连接数为2，上层目录的连接数会增加1，这是因为<code class="language-plaintext highlighter-rouge">mkdir</code>会自动在新目录里生成<code class="language-plaintext highlighter-rouge">.</code>与<code class="language-plaintext highlighter-rouge">..</code>两个表示当前目录和上层目录的Hard link</p>

<h1 id="b-磁盘的分区格式化检验与挂载">B. 磁盘的分区、格式化、检验与挂载</h1>

<p>新增一块硬盘的流程：</p>

<p>磁盘分区→分区进行格式化并创建可用文件系统→检验文件系统→Linux上挂载</p>

<h3 id="3fdisk-磁盘分区">3.<code class="language-plaintext highlighter-rouge">fdisk</code> 磁盘分区</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fdisk <span class="o">[</span>OPTIONS] device
fdisk <span class="nt">-l</span> <span class="c"># 输出系统内能够找到的所有设备的分区</span>

</code></pre></div></div>

<p><img src="/Users/ncc-1701-enterprise/Desktop/Screen Shot 2021-01-31 at 11.59.18.png" alt="进入fdisk的工作页面" /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#fdisk工作页面下的重要命令（用m可以查看完整版）</span>
d <span class="c">#删除分区</span>
n <span class="c">#新增分区</span>
p <span class="c">#在屏幕上显示分区表</span>

<span class="c">#write 与 quit</span>
q <span class="c"># 不储存变化 直接退出fdisk</span>
w <span class="c"># 将刚才的变化写入分区表</span>
</code></pre></div></div>
<p><strong>PS:</strong> 在macOS的系统上<code class="language-plaintext highlighter-rouge">diskutil</code>命令代替了<code class="language-plaintext highlighter-rouge">fdisk</code>
<img src="/Users/ncc-1701-enterprise/Library/Application Support/typora-user-images/Screen Shot 2021-02-03 at 11.49.32.png" alt="Screen Shot 2021-02-03 at 11.49.32" /></p>

<p>重装系统自主分区后sda磁盘的分区情况。</p>

<p><code class="language-plaintext highlighter-rouge">sda1</code> 是挂载在boot下，但是我不明白的是，为什么是从2048开始，而是不是从1开始。那1到2048的空间用来做什么了。</p>
<h3 id="使用实例">【使用实例】</h3>
<h4 id="fdisk--l-查阅系统内所有分区"><code class="language-plaintext highlighter-rouge">fdisk -l</code> 查阅系统内所有分区</h4>

<h3 id="4mkfs-磁盘格式化">4.<code class="language-plaintext highlighter-rouge">mkfs</code> 磁盘格式化</h3>

<h3 id="5fsck--badblocks-磁盘检验">5.<code class="language-plaintext highlighter-rouge">fsck</code> &amp; <code class="language-plaintext highlighter-rouge">badblocks</code> 磁盘检验</h3>
<h3 id="6mount-磁盘挂载">6.<code class="language-plaintext highlighter-rouge">mount</code> 磁盘挂载</h3>
<h3 id="7umount设备文件卸载">7.<code class="language-plaintext highlighter-rouge">umount</code>设备文件卸载</h3>
<h3 id="8-mknod-磁盘参数修改">8. <code class="language-plaintext highlighter-rouge">mknod</code> 磁盘参数修改</h3>
<h3 id="9e2label">9.<code class="language-plaintext highlighter-rouge">e2label</code></h3>
<h3 id="10tune2fs">10.<code class="language-plaintext highlighter-rouge">tune2fs</code></h3>
<h3 id="11hdparm">11.<code class="language-plaintext highlighter-rouge">hdparm</code></h3>

<h1 id="c内存交换空间">C.内存交换空间</h1>
<h3 id="12swap">12.<code class="language-plaintext highlighter-rouge">swap</code></h3>
<h3 id="13free">13.<code class="language-plaintext highlighter-rouge">free</code></h3>

:ET